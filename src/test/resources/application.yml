spring:
  datasource:
    url: ""
    username: ""
    password: ""
    driver-class-name: org.postgresql.Driver
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.xml
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
        jdbc:
          batch_size: 5
  redis:
    host: localhost
    port: 6379

logging:
  level:
    com.modsensoftware.marketplace: debug

default:
  page:
    size: 20
  role: MANAGER


jwt:
  secret:
    access: "qBTmv4oXFFR2GwjexDJ4t6fsIUIUhhXqlktXjXdkcyygs8nPVEwMfo29VDRRepYDVV5IkIxBMzr7OEHXEHd37w=="
    refresh: "zL1HB3Pch05Avfynovxrf/kpF9O2m4NCWKJUjEp27s9J2jEG3ifiKCGylaZ8fDeoONSTJP/wAzKawB8F9rOMNg=="
  lifetime:
    access: 5
    refresh: 43200
  claims:
    roles: "roles"

exception:
  message:
    categoryNotFound: "Category entity with id=%s is not present."
    companyNotFound: "Company entity with id=%s is not present."
    itemNotFound: "Item entity with uuid=%s is not present."
    positionNotFound: "Position entity with id=%s is not found."
    userNotFound: "User entity with uuid=%s is not found."
    invalidCreatedBetweenFilter: "Filter 'created' = %s is invalid"
    companyEmailTaken: "Company with email %s already exists"
    userEmailTaken: "User with email %s already exists"
    itemVersionsMismatch: "Provided item version does not match with the one in the database"
    positionVersionsMismatch: "Provided position version does not match with the one in the database"
    sessionFactoryInitFail: "Initialization of SessionFactory failed"
    noItemVersionProvided: "No version for item with id %s was provided"
    noPositionVersionProvided: "No version for position with id %s was provided"
    insufficientItemsInStock: "Not enough items in stock for position with id=%s. Wanted amount=%s. Currently in stock=%s"
    insufficientOrderAmount: "Wanted amount=%s is less than position's(id=%s) minimum amount=%s"
    invalidCredentialsException: "Provided credentials are incorrect"
    userWithEmailNotFound: "User with email=%s is not found"
    invalidJwt: "Provided JWT is invalid"