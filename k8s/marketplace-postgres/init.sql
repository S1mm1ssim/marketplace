CREATE SCHEMA company_service;
create table company_service.company (
    id bigint generated by default as identity,
    name varchar(255) not null,
    email varchar(255) not null,
    created timestamp not null,
    description text not null,
    is_deleted boolean default false not null,
    constraint company_pkey primary key (id),
    constraint company_email_key unique (email)
);
INSERT INTO company_service.company(name, email, created, description, is_deleted)
VALUES (
        'init',
        'init@init.com',
        NOW(),
        'init company',
        false
    );
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE SCHEMA user_service;
create table user_service."user" (
    id uuid default uuid_generate_v4() not null,
    username varchar(255) not null,
    email varchar(255) not null,
    name varchar(255) not null,
    created timestamp not null,
    updated timestamp not null,
    company_id bigint not null,
    constraint user_pkey primary key (id),
    constraint user_email_key unique (email),
    constraint user_username_key unique (username)
);
CREATE SCHEMA user_transaction_service;
CREATE TYPE user_transaction_service.transaction_status AS ENUM ('IN_PROGRESS', 'SUCCESS', 'REJECTED');
create table user_transaction_service.user_transaction (
    id bigint generated by default as identity,
    user_id uuid not null,
    created timestamp not null,
    status user_transaction_service.transaction_status default 'SUCCESS'::user_transaction_service.transaction_status not null,
    constraint user_transaction_pkey primary key (id)
);
create table user_transaction_service."order" (
    id bigint generated by default as identity,
    amount double precision not null,
    position_id varchar(24) not null,
    user_transaction_id bigint not null,
    constraint order_pkey primary key (id),
    constraint fk_order_user_transaction foreign key (user_transaction_id) references user_transaction_service.user_transaction,
    constraint amount_check check (amount >= (0.01)::double precision)
);