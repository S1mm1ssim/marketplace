server:
  port: 8100

management:
  endpoints.web.exposure.include: 'prometheus, health'
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true

spring:
  application:
    name: user-transaction-service
  datasource:
    url: "jdbc:postgresql://${POSTGRES_ADDRESS:localhost:32768}/marketplace"
    username: "postgres"
    password: "postgres"
    driver-class-name: org.postgresql.Driver
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.xml
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_schema: user_transaction_service
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
        jdbc:
          batch_size: 5
  config:
    import: "optional:configserver:${CONFIG_URI:http://localhost:8888}"
  cloud:
    loadbalancer:
      cache:
        caffeine:
          spec: maximumSize=10,initialCapacity=50,expireAfterAccess=300s
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    bootstrap-servers: "${KAFKA_ADDRESS:localhost:29092}"

eureka:
  client:
    serviceUrl:
      defaultZone: "${EUREKA_URI:http://localhost:8761/eureka}"

topics:
  processedTransactions:
    name: userTransactionStatusResults
    groupId: userTransactionStatusResults_group_id
  transactionsPlacedForProcessing:
    name: userTransactionProcessing