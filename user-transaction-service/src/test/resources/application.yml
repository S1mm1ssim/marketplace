
spring:
  cloud:
    config:
      enabled: false
  datasource:
    url: ""
    username: ""
    password: ""
    driver-class-name: org.postgresql.Driver
  liquibase:
    change-log: classpath:/changelog/db.changelog-master.xml
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_schema: user_transaction_service
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
        jdbc:
          batch_size: 5
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ""
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    bootstrap-servers: "${spring.embedded.kafka.brokers}"

logging:
  level:
    root: info
    com.modsensoftware.marketplace: debug

default:
  page:
    size: 20
  role: MANAGER
  role-prefix: ROLE_
  jwt-realm-access-claim: realm_access
  jwt-roles-claim: roles

exception:
  message:
    sessionFactoryInitFail: "Initialization of SessionFactory failed"
    insufficientItemsInStock: "Not enough items in stock for position with id=%s. Wanted amount=%s. Currently in stock=%s"
    insufficientOrderAmount: "Wanted amount=%s is less than position's(id=%s) minimum amount=%s"

eureka:
  client:
    enabled: false

topics:
  processedTransactions:
    name: userTransactionStatusResultsTest
    groupId: userTransactionStatusResultsTest_group_id
  transactionsPlacedForProcessing:
    name: userTransactionProcessingTest